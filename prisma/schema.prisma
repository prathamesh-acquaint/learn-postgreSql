enum Role {
  ADMIN
  JOB_SEEKER
  INSTRUCTOR
  COMPANY
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String   @unique
  password   String?
  profilePic String?
  isActive   Boolean  @default(true)
  isVerified Boolean  @default(false)
  isDeleted  Boolean  @default(false)
  role       Role // Enum to determine user role
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relationships
  jobSeeker  JobSeeker?
  instructor Instructor?
  company    Company?
}

model JobSeeker {
  id           Int      @id @default(autoincrement())
  skill        String[]
  noticePeriod String
  ctcType      String
  expectedCTC  Float
  currentCTC   Float
  isDeleted    Boolean  @default(false)
  userId       Int      @unique
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Instructor {
  id            Int      @id @default(autoincrement())
  expertise     String
  preCourseLink String
  isDeleted     Boolean  @default(false)
  userId        Int      @unique
  user          User     @relation(fields: [userId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Company {
  id                Int      @id @default(autoincrement())
  companyType       String
  companyName       String
  companyWebsiteURL String?
  companyProfileURL String?
  contactNumber     String
  contactEmail      String
  companyDesc       String?
  isDeleted         Boolean  @default(false)
  userId            Int      @unique
  user              User     @relation(fields: [userId], references: [id])
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Industry {
  id        Int        @id @default(autoincrement())
  name      String
  isDeleted Boolean    @default(false)
  interests Interest[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Interest {
  id         Int      @id @default(autoincrement())
  name       String
  isDeleted  Boolean  @default(false)
  industryId Int
  insustry   Industry @relation(fields: [industryId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
